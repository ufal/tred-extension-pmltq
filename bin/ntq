#!/bin/bash

VERSION=0.1
PRINT_USAGE=0
PRINT_HELP=0
PRINT_VERSION=0
DEBUG=0
QUIET=0

NTRED=ntred
NTRED_FLAGS=(-q)
SCRIPT_FLAGS=()
QUERY=()
SHARED_DIR=.
KEEP_OUTPUT=0

PMLTQ_EXTENSION=$HOME/.tred.d/extensions/pmltq

# readlink -f does not work on Mac OSX, so here is a Perl-based workaround:
readlink_nf () {
    perl -MCwd -e 'print Cwd::abs_path(shift)' "$1"
}

while [ $# -gt 0 ]; do
    case "$1" in
        -X|--pmltq-extension-dir) PMLTQ_EXTENSION=$(readlink_nf "$2"); shift 2; ;;

	-H|--hub) NTRED_FLAGS+=(--hub "$2"); shift 2; ;;
	-P|--port) NTRED_FLAGS+=(--port "$2"); shift 2; ;;

	-N|--ntred) NTRED="$2"; shift 2; ;;
	-n|--ntred-flags) NTRED_FLAGS+=($2); shift 2; ;;

	-d|--shared-dir) SHARED_DIR="$2"; shift 2; ;;

	-Q|--query) QUERY+=("$2"); shift 2; ;;
	-F|--filters) SCRIPT_FLAGS+=(--filters "$2"); shift 2; ;;
	-p|--query-pml-file) SCRIPT_FLAGS+=(--query-pml-file "$2"); shift 2; ;;
	-f|--query-file) SCRIPT_FLAGS+=(--query-file "$2"); shift 2; ;;
	-i|--query-id) SCRIPT_FLAGS+=(--query-id "$2"); shift 2; ;;

	-k|--keep-output-files) KEEP_OUTPUT=1; shift ;;

	-D|--debug) DEBUG=1; shift ;;
	-q|--quiet) QUIET=1; shift ;;
	-u|--usage) PRINT_USAGE=1; shift ;;
	-h|--help) PRINT_HELP=1; shift ;;
	-v|--version) PRINT_VERSION=1; shift ;;
	--) shift ; break ;;
	-*) echo "Unknown command-line option: $1" ; exit 1 ;;
        *) args+=("$1"); shift ;;
    esac
done

eval set -- "${args[@]}"

function usage () {
    echo "This is ntq version $VERSION" 
    echo
    cat <<_USAGE_
USAGE

  ntq [--ssh sge-manager-host ] 
      [-Q query | -f|--query-[pml]-file queries.[pml|txt] [-i|--query-id ID] ]
      [ options ]

    or 

  ntq [-h|--help]|[-u|--usage]|[-v|--version]

_USAGE_
}

function help () {
    usage
    cat <<_HELP_

DESCRIPTION

  This command runs a PML-TQ query over specified files using NTrEd.
  If the query contains output filters, the filters are applied
  locally on query results accumulated from all BTrEd servers.

OPTIONS

  -Q|--query <string> 

	a PML-TQ query

  -p|--query-pml-file <path>

	load PML-TQ query from a given PML file

  -f|--query-file <path>

	load PML-TQ query from a given text file

  -i|--query-id <ID>

        If used with -p, the query tree with the corresponding id is
        used as a query. If used with -f, the query text file is
        supposed to contain several queries separated by special
        comment lines as in the following example:

		# == query: QUERY1_ID ==
                ...query1...
		# == query: QUERY2_ID ==
                ...query2...
                ...etc

	The part corresponding to the query with a given ID is used as
	a query.

  -F|--filters <string>

	PML-TQ query output filters to append to the query

  -H|--hub <host> 

	connect to NTrEd hub on a given host (default is localhost)

  -P|--port <port>

	connect to NTrEd hub on a given port (default is 1500)

  -N|--ntred <path> 

	path to ntred

  -n|--ntred-flags <cmdline>

	extra command-line flags for ntred client

  -d|--shared-dir <dir>

	use this directory for temporary files shared between
	current host, the SGE queue master, and SGE cluster
	nodes

  -x|--pmltq-extension-dir

	path to TrEd pmltq extension

  -h|--help    - print this help and exit
  -u|--usage   - print a short usage and exit
  -v|--version - print version and exit

  -D|--debug - turn on debugging output
  -q|--quiet - turn off informative messages

LICENSE

  This software is distributed under GPL - The General Public Licence.
  Full text of the GPL can be found at
  http://www.gnu.org/copyleft/gpl.html

AUTHOR

  Petr Pajas <pajas@matfyz.cz>

_HELP_
}

if [ $PRINT_VERSION = 1 ]; then echo Version: $VERSION; exit; fi
if [ $PRINT_HELP = 1 ]; then help; exit; fi
if [ $PRINT_USAGE = 1 ]; then usage; exit; fi

if [ ! -f $PMLTQ_EXTENSION/package.xml ]; then
   echo "Didn't find pmltq TrEd extension in $PMLTQ_EXTENSION!" >&2
   exit 1
fi

SHARED_DIR=$(readlink_nf "$SHARED_DIR")
FILTER_FILE="$SHARED_DIR/pmltq_ntred_filter.$$.pl"

ntred_cmdline=(
    "$NTRED" "${NTRED_FLAGS[@]}" -I "$PMLTQ_EXTENSION/contrib/pmltq/pmltq.ntred" 
    -- "${SCRIPT_FLAGS[@]}" -o "$FILTER_FILE" "${QUERY[@]}"
)

"${ntred_cmdline[@]}" | "${PMLTQ_EXTENSION}"/bin/run_filter.pl --if-exists -c "$FILTER_FILE"

rm -f "${FILTER_FILE}"

#!/bin/bash

# readlink -f does not work on Mac OSX, so here is a Perl-based workaround:
readlink_nf () {
    perl -MCwd -e 'print Cwd::abs_path(shift)' "$1"
}

shell_quote_args () {
  quoted=""
  for s in "$@"; do
    quoted+=" '"${s//\'/\'\\\'\'}"'"
  done
  echo "${quoted# }"
}

VERSION=0.1
PRINT_USAGE=0
PRINT_HELP=0
PRINT_VERSION=0
DEBUG=0
QUIET=0

FILELIST=
SSH=
BTRED_FLAGS=(-Q)
JTRED_FLAGS=()
SCRIPT_FLAGS=()
QUERY=()
SHARED_DIR=$(readlink_nf ".")
KEEP_OUTPUT=0

PMLTQ_EXTENSION=$HOME/.tred.d/extensions/pmltq

while [ $# -gt 0 ]; do
    case "$1" in
	-l|--filelist) FILELIST=$(readlink_nf "$2"); shift 2; ;;
	--pack-size) JTRED_FLAGS+=(-js "$2"); shift 2; ;;
	
        -X|--pmltq-extension-dir) PMLTQ_EXTENSION=$(readlink_nf "$2"); shift 2; ;;

	-S|--ssh) SSH="$2"; shift 2; ;;

	-B|--btred) JTRED_FLAGS+=(-jB "$2"); shift 2; ;;
	-b|--btred-flags) BTRED_FLAGS+=($2); shift 2; ;;

	-T|--tmp-dir) JTRED_FLAGS+=(-jt "$(readlink_nf "$2")"); shift 2; ;;
	-d|--shared-dir) SHARED_DIR="$(readlink_nf "$2")"; JTRED_FLAGS+=(-jw "$SHARED_DIR"); shift 2; ;;

	-Q|--query) QUERY+=("$2"); shift 2; ;;
	-F|--filters) SCRIPT_FLAGS+=(--filters "$2"); shift 2; ;;
	-p|--query-pml-file) SCRIPT_FLAGS+=(--query-pml-file "$2"); shift 2; ;;
	-f|--query-file) SCRIPT_FLAGS+=(--query-file "$2"); shift 2; ;;
	-i|--query-id) SCRIPT_FLAGS+=(--query-id "$2"); shift 2; ;;

	-k|--keep-output-files) KEEP_OUTPUT=1; shift ;;

	-D|--debug) DEBUG=1; shift ;;
	-q|--quiet) QUIET=1; shift ;;
	-u|--usage) PRINT_USAGE=1; shift ;;
	-h|--help) PRINT_HELP=1; shift ;;
	-v|--version) PRINT_VERSION=1; shift ;;
	--) shift ; break ;;
	-*) echo "Unknown command-line option: $1" ; exit 1 ;;
        *) args+=("$1"); shift ;;
    esac
done

eval set -- "${args[@]}"

function usage () {
    echo "This is jtq version $VERSION" 
    echo
    cat <<_USAGE_
USAGE

  jtq [--ssh sge-manager-host ] 
      [-Q query | -f|--query-[pml]-file queries.[pml|txt] [-i|--query-id ID] ]
      [ options ]
      [-l filelists | files ... ]

    or 

  jtq [-h|--help]|[-u|--usage]|[-v|--version]

_USAGE_
}

function help () {
    usage
    cat <<_HELP_

DESCRIPTION

  This command runs a PML-TQ query over specified files using BTrEd
  distributed over a SGE cluster. If the query contains output
  filters, the filters are applied locally on query results
  accumulated from all BTrEd instances.

  The script can use Secure Shell (SSH) to log on a SGE queue master.

OPTIONS

  -l|--filelist <filename>

	a list of files to search through

  -S|--ssh <host> 

	SSH to the given host before running any SGE-related
	commands; the host is supposed to be the SGE queue
	master (the host and current computer must share the
	current working dir)


  -Q|--query <string> 

	a PML-TQ query

  -p|--query-pml-file <path>

	load PML-TQ query from a given PML file

  -f|--query-file <path>

	load PML-TQ query from a given text file

  -i|--query-id <ID>

        If used with -p, the query tree with the corresponding id is
        used as a query. If used with -f, the query text file is
        supposed to contain several queries separated by special
        comment lines as in the following example:

		# == query: QUERY1_ID ==
                ...query1...
		# == query: QUERY2_ID ==
                ...query2...
                ...etc

	The part corresponding to the query with a given ID is used as
	a query.

  -F|--filters <string>

	PML-TQ query output filters to append to the query

  -B|--btred <path> 

	path to btred

  -b|--btred-flags <cmdline>

	extra command-line flags for btred

  -T|--tmp-dir <dir>

	use this directory on SGE queue master for temporary files

  -d|--shared-dir <dir>

	use this directory for temporary files shared between
	current host, the SGE queue master, and SGE cluster
	nodes

  --pack-size <N>

	N files per one btred

  -x|--pmltq-extension-dir

	path to TrEd pmltq extension

  -h|--help    - print this help and exit
  -u|--usage   - print a short usage and exit
  -v|--version - print version and exit

  -D|--debug - turn on debugging output
  -q|--quiet - turn off informative messages

LICENSE

  This software is distributed under GPL - The General Public Licence.
  Full text of the GPL can be found at
  http://www.gnu.org/copyleft/gpl.html

AUTHOR

  Petr Pajas <pajas@matfyz.cz>

_HELP_
}

if [ $PRINT_VERSION = 1 ]; then echo Version: $VERSION; exit; fi
if [ $PRINT_HELP = 1 ]; then help; exit; fi
if [ $PRINT_USAGE = 1 ]; then usage; exit; fi

if [ -z "$FILELIST" ] && [ $# = 0 ]; then
    usage;
    echo "Missing argument: you must specifiy --filelist or files" >&2
    exit 1;
fi 

if [ ! -f $PMLTQ_EXTENSION/package.xml ]; then
   echo "Didn't find pmltq TrEd extension in $PMLTQ_EXTENSION!" >&2
   exit 1
fi

jobname="jtq_$$"

if [ -n $SSH ]; then
    jobname+="-${HOSTNAME}"
fi

if [ -z "$FILELIST" ]; then
    JTRED_FLAGS+=("$@") 
else
    JTRED_FLAGS+=(-l "$FILELIST") 
fi

jtred_cmdline=(jtred -jn "${jobname}" "${JTRED_FLAGS[@]}" -jb -I "$PMLTQ_EXTENSION/contrib/pmltq/pmltq.ntred" "${BTRED_FLAGS[@]}")

FILTER_FILE="${SHARED_DIR}/${jobname}.pl"
OUT_FILE="${jobname}.o"

jtred_cmdline+=(-- -o "${SCRIPT_FLAGS[@]}" --filter-code-out "${FILTER_FILE}" "${QUERY[@]}" --)

if [ -n "$SSH" ]; then
    ssh "$SSH" "if [ -f ~/.bash_profile ]; then . ~/.bash_profile; elif [ -f ~/.profile ]; then . ~/.profile; fi; "\
               "cd $(shell_quote_args "$PWD"); "\
               "$(shell_quote_args ${jtred_cmdline[@]})"
else
    "${jtred_cmdline[@]}"
fi 2>&1 >"$OUT_FILE" |
if [ $QUIET = 1 ]; then
  cat >/dev/null
else
  cat >&2
fi


if [ -s "${FILTER_FILE}" ]; then
  "${PMLTQ_EXTENSION}"/bin/run_filter.pl -c "${FILTER_FILE}" "${OUT_FILE}"
  [ $QUIET = 1 ] || echo "(filters applied)" >&2
else
  cat "${OUT_FILE}"
  [ $QUIET = 1 ] || echo "(no filters)" >&2
fi

[ $QUIET = 1 ] || echo "Cleaning up after job ${jobname}" >&2

if [ $KEEP_OUTPUT = 0 ]; then
  rm -f "${FILTER_FILE}" "${OUT_FILE}" 
fi
